Insert into WINEFINE.PRODUCT (PRODUCT_NO,PRODUCT_TYPE,PRODUCT_NAME,PRICE,BRAND,ALCOHOL,STOCK,ORIGIN,SWEETNESS,ACIDITY,BODY,TANNIN,STATUS,COUNT,THUMBNAIL,CONTENT_PHOTO1,CONTENT_PHOTO2,CONTENT) values (2,'레드와인','글루미데이',29000,'와인파는청년들',12,95,'한국',3,5,5,5,'Y',95,'/winefine/resources/product_upfiles/2022052322261960731.JPG','/winefine/resources/product_upfiles/2022052409344827765.JPG',null,'null');
Insert into WINEFINE.PRODUCT (PRODUCT_NO,PRODUCT_TYPE,PRODUCT_NAME,PRICE,BRAND,ALCOHOL,STOCK,ORIGIN,SWEETNESS,ACIDITY,BODY,TANNIN,STATUS,COUNT,THUMBNAIL,CONTENT_PHOTO1,CONTENT_PHOTO2,CONTENT) values (9,'레드와인','콘투고',70000,'안티노리',17,6,'이탈리아',1,3,5,4,'Y',0,'/winefine/resources/product_upfiles/2022052323181093443.JPG','/winefine/resources/product_upfiles/2022052323181097984.JPG','/winefine/resources/product_upfiles/2022052323181070530.JPG',null);
Insert into WINEFINE.PRODUCT (PRODUCT_NO,PRODUCT_TYPE,PRODUCT_NAME,PRICE,BRAND,ALCOHOL,STOCK,ORIGIN,SWEETNESS,ACIDITY,BODY,TANNIN,STATUS,COUNT,THUMBNAIL,CONTENT_PHOTO1,CONTENT_PHOTO2,CONTENT) values (10,'화이트와인','디오라 샤르도네',39000,'디오라',14,31,'산타루치아',2,4,4,3,'Y',0,'/winefine/resources/product_upfiles/2022052323260341606.JPG','/winefine/resources/product_upfiles/2022052323260350105.JPG','/winefine/resources/product_upfiles/2022052323260399017.JPG',null);
Insert into WINEFINE.PRODUCT (PRODUCT_NO,PRODUCT_TYPE,PRODUCT_NAME,PRICE,BRAND,ALCOHOL,STOCK,ORIGIN,SWEETNESS,ACIDITY,BODY,TANNIN,STATUS,COUNT,THUMBNAIL,CONTENT_PHOTO1,CONTENT_PHOTO2,CONTENT) values (8,'레드와인','비냐 조잘 말라예토',35000,'안토니오 산즈',14,18,'스페인',1,4,4,4,'Y',0,'/winefine/resources/product_upfiles/2022052322591961965.JPG','/winefine/resources/product_upfiles/2022052322591986318.JPG','/winefine/resources/product_upfiles/2022052323185436224.JPG','null');

COMMIT;

Insert into WINEFINE.LOCATION (LOCATION_CODE,LOCATION_NAME) values (1,'당산');
Insert into WINEFINE.PAYMENT_TBL (PAYMENT_CODE,PAYMENT) values (1,'무통장입금');

Insert into WINEFINE.W_ORDER (ORDER_NO,ORDER_USER,PICKUP,ORDER_STATUS,TOTAL_PRICE,ORDER_DATE,LOCATION_CODE,PAYMENT_CODE) values (1,1,'1','1',1,to_date('22/05/22','RR/MM/DD'),1,1);

Insert into WINEFINE.REVIEW (REVIEW_NO,PRODUCT_NO,REVIEW_WRITER,ORDER_NO,REVIEW_TITLE,REVIEW_CONTENT,CREATE_DATE,COUNT,STATUS,REVIEW_PHOTO,ANSWER,ANSWER_DATE) values (1,1,2,1,'만족합니다.','생각보다 맛있어요.',to_date('22/05/22','RR/MM/DD'),16,'Y',null,null,null);
Insert into WINEFINE.QNA (QNA_NO,PRODUCT_NO,QNA_WRITER,QNA_TITLE,QNA_CONTENT,CREATE_DATE,COUNT,QNA_OPEN,ANSWER_YN,STATUS,QNA_PHOTO,ANSWER,ANSWER_DATE) values (1,1,2,'상품문의','문의드립니다. 와인파인 와인은 뭐가 제일 맛있나요?',to_date('22/05/19','RR/MM/DD'),15,'공개','N','Y',null,null,null);



Commit;

SELECT ORDER_NO, ORDER_USER, PICKUP, ORDER_STATUS, TOTAL_PRICE,
		       ORDER_DATE, LOCATION_NAME, PAYMENT
		  FROM W_ORDER
          JOIN LOCATION USING(LOCATION_CODE)
          JOIN PAYMENT_TBL USING(PAYMENT_CODE)
		 WHERE ORDER_USER = 1;	
         
         
INSERT INTO ORDER_PRODUCT(ORDER_PRODUCT_NO, ORDER_NO, PRODUCT_NO, P_COUNT, P_PRICE)
		VALUES (SEQ_OPNO.NEXTVAL, 1, 1, 2, 29000);

INSERT INTO ORDER_PRODUCT(ORDER_PRODUCT_NO, ORDER_NO, PRODUCT_NO, P_COUNT, P_PRICE)
		VALUES (SEQ_OPNO.NEXTVAL, 1, 1, 2, 20000);
        
SELECT ORDER_PRODUCT_NO, ORDER_NO, PRODUCT_NO, P_COUNT, P_PRICE
FROM ORDER_PRODUCT
WHERE ORDER_NO = 1;
           
           SELECT DISTINCT ORDER_USER
           FROM W_ORDER, MEMBER
           WHERE ORDER_USER = USER_NO;
           
           
SELECT ORDER_NO, ORDER_USER, PICKUP, ORDER_STATUS, TOTAL_PRICE,
		       ORDER_DATE, LOCATION_NAME, PAYMENT
		  FROM W_ORDER
		  JOIN LOCATION USING(LOCATION_CODE)
		  JOIN PAYMENT_TBL USING(PAYMENT_CODE)
		 WHERE ORDER_USER = 2;
        
        
	<entry key="selectOrderProduct">
		SELECT ORDER_PRODUCT_NO, ORDER_NO, PRODUCT_NO, P_COUNT, P_PRICE, THUMBNAIL
		FROM ORDER_PRODUCT
		JOIN W_ORDER USING(ORDER_NO)
		JOIN PRODUCT USING(PRODUCT_NO)
		WHERE ? = (SELECT DISTINCT ORDER_NO
				   FROM W_ORDER) 

	</entry>
        
        -- 재시도
--		SELECT ORDER_PRODUCT_NO, ORDER_NO, PRODUCT_NO, P_COUNT, P_PRICE, THUMBNAIL
--		FROM ORDER_PRODUCT P
--		JOIN PRODUCT USING(PRODUCT_NO)
--		WHERE 4 = P.ORDER_NO; 
--        
--        SELECT ORDER_PRODUCT_NO, ORDER_NO, PRODUCT_NAME, P_COUNT, P_PRICE, THUMBNAIL
--		FROM ORDER_PRODUCT P
--		JOIN PRODUCT USING(PRODUCT_NO)
--		WHERE 3 = P.ORDER_NO';
        
        
SELECT ORDER_NO, ORDER_USER, PICKUP, ORDER_STATUS, TOTAL_PRICE,
		       ORDER_DATE, LOCATION_NAME, PAYMENT
		  FROM W_ORDER
		  JOIN LOCATION USING(LOCATION_CODE)
		  JOIN PAYMENT_TBL USING(PAYMENT_CODE)
		 WHERE ORDER_NO = 2
		 ORDER BY ORDER_NO DESC;
         
         
         
SELECT ORDER_NO, USER_NAME, PICKUP, PICKUP_DATE, ORDER_STATUS, TOTAL_PRICE,
		       ORDER_DATE, LOCATION_NAME, PAYMENT
		  FROM W_ORDER
		  JOIN MEMBER ON (ORDER_USER = USER_NO)
		  JOIN LOCATION USING(LOCATION_CODE)
		  JOIN PAYMENT_TBL USING(PAYMENT_CODE)
		 WHERE ORDER_NO = 1
		 ORDER BY ORDER_NO DESC;     
         
         
         
SELECT ROWNUM RNUM, A.*
			  FROM(SELECT ORDER_NO, USER_NAME, PICKUP, PICKUP_DATE, ORDER_STATUS, TOTAL_PRICE,
			       		  ORDER_DATE, LOCATION_NAME, PAYMENT
				   FROM W_ORDER
				   JOIN MEMBER ON(ORDER_USER = USER_NO)
				   JOIN LOCATION USING(LOCATION_CODE)
				   JOIN PAYMENT_TBL USING(PAYMENT_CODE)
				   ORDER BY ORDER_NO DESC) A;
                   
                   
UPDATE W_ORDER
   SET ORDER_STATUS = CASE ORDER_STATUS WHEN '결제완료' THEN '픽업완료'
                                        WHEN '픽업완료' THEN '결제중'
                                        ELSE '결제완료'
                      END
 WHERE ORDER_NO = 2;
 
SELECT *
FROM W_ORDER
WHERE ORDER_NO = 2; 

SELECT USER_ID, PRODUCT_NO, ORDER_PRODUCT_NO
FROM W_ORDER
JOIN MEMBER ON (USER_NO = ORDER_USER)
JOIN ORDER_PRODUCT USING(ORDER_NO)
WHERE USER_NO = 2
  AND PRODUCT_NO = 1;
  
  
SELECT USER_ID, ORDER_NO, ORDER_PRODUCT_NO
FROM W_ORDER
JOIN MEMBER ON (USER_NO = ORDER_USER)
JOIN ORDER_PRODUCT USING(ORDER_NO)
WHERE USER_NO = 2
  AND PRODUCT_NO = 1;
  
SELECT *
FROM(SELECT ROWNUM RNUM, A.*
      FROM (SELECT *
            FROM PRODUCT
            ORDER BY PRODUCT_NO) A)
WHERE RNUM BETWEEN 1 AND 5;

SELECT *
FROM PRODUCT
WHERE PRODUCT_NO BETWEEN 1 AND 5;


SELECT USER_ID, ORDER_NO
	FROM W_ORDER
	JOIN ORDER_PRODUCT USING(ORDER_NO)
	JOIN MEMBER ON(ORDER_USER = USER_NO)
	WHERE PRODUCT_NO = 
	  AND USER_NO = 2
