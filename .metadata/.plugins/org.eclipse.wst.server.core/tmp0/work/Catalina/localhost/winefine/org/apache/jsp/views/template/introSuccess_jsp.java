/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-05-29 14:59:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.template;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class introSuccess_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>WINEFINE :D</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("    body{\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("    #video { \r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 0px;\r\n");
      out.write("        left: 0px;\r\n");
      out.write("        min-width: 100%;\r\n");
      out.write("        min-height: 100%;\r\n");
      out.write("        width: 1200px;\r\n");
      out.write("        z-index: -1;\r\n");
      out.write("        overflow: hidden;\r\n");
      out.write("    }\r\n");
      out.write("    .videoT .bg_dark span {\r\n");
      out.write("        line-height: 120px;\r\n");
      out.write("        font-size: 150px;\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("    }\r\n");
      out.write("    a{\r\n");
      out.write("        font-weight: 900;\r\n");
      out.write("        font-size: 22px;\r\n");
      out.write("        color:#6B325B;\r\n");
      out.write("    }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"videoT\" onclick=\"welcome();\">\r\n");
      out.write("        <video id=\"video\" preload=\"auto\" autoplay=\"true\" loop=\"loop\" muted=\"muted\" volume=\"0\">\r\n");
      out.write("            <source src=\"/winefine/resources/images/intro.mp4\">\r\n");
      out.write("        </video>\r\n");
      out.write("        <h2 class=\"bg_dark\">\r\n");
      out.write("            <span>&nbsp;Time for Wine,<br>&nbsp;WINEFINE</span>\r\n");
      out.write("        </h2>\r\n");
      out.write("        \r\n");
      out.write("    \r\n");
      out.write("        <div id=\"footer\" style=\"color:white; padding-left: 50px;\">\r\n");
      out.write("            <p>\r\n");
      out.write("                <b><a href=\"https://www.instagram.com/sumsei.official/\">INSTAGRAM</a> \r\n");
      out.write("                    <a href=\"https://www.youtube.com/channel/UCbvIfAgYuIQQK3AGIa4RI0Q\">YOUTUBE</a>\r\n");
      out.write("                    <a href=\"https://music.apple.com/library/playlist/p.AWXoLZ4HN43qDl4\">APPLE MUSIC</a> \r\n");
      out.write("                    <a href=\"https://open.spotify.com/playlist/60dWQe5aLrRK5jujBaE5v3?si=d96458e4e97d4846\">SPOTIFY</a></b><br><br>\r\n");
      out.write("                    (주)와인파인 대표자: WINEFINE<br>\r\n");
      out.write("                    사업자등록번호: [KH-452-02-00843] 통신판매업자신고번호: 제2022-서울 영등포 - NO4호<br>\r\n");
      out.write("                    대표번호: KH-1640-5091 주소: 서울특별시 영등포구 선유동2로 57 이레빌딩 19F, 20F<br>\r\n");
      out.write("                    개인정보관리자: KH(khlove@iei.co.kr)<br>\r\n");
      out.write("                    대표메일 winefine@iei.co.kr 사이트명: 와인파인<br>\r\n");
      out.write("                    Bank Accounts : KH은행 027-142321-01-004 주식회사 와인파인<br>\r\n");
      out.write("                    CS Center : 1661-5091 AM 10:00 ~ PM 6:00<br>\r\n");
      out.write("                    (점심시간 PM 1:00~ 2:00) ( WEEKEND/HOLIDAY OFF )<br>\r\n");
      out.write("            </p>\r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function welcome(){\r\n");
      out.write("            location.href=\"/winefine/main.do\";\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
